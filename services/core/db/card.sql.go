// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: card.sql

package db

import (
	"context"
)

const addUsedCardNumber = `-- name: AddUsedCardNumber :exec
INSERT INTO core_assigned_card_numbers
(label, number)
VALUES
(?, ?)
`

type AddUsedCardNumberParams struct {
	Label  string
	Number string
}

func (q *Queries) AddUsedCardNumber(ctx context.Context, arg AddUsedCardNumberParams) error {
	_, err := q.db.ExecContext(ctx, addUsedCardNumber, arg.Label, arg.Number)
	return err
}

const getCardNumberStatus = `-- name: GetCardNumberStatus :one
SELECT COUNT(*)
FROM core_assigned_card_numbers
WHERE label = ?
AND number = ?
LIMIT 1
`

type GetCardNumberStatusParams struct {
	Label  string
	Number string
}

func (q *Queries) GetCardNumberStatus(ctx context.Context, arg GetCardNumberStatusParams) (int64, error) {
	row := q.db.QueryRowContext(ctx, getCardNumberStatus, arg.Label, arg.Number)
	var count int64
	err := row.Scan(&count)
	return count, err
}
