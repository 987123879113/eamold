// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: demomusic.sql

package db

import (
	"context"
)

const getDemoMusic = `-- name: GetDemoMusic :many
SELECT musicid
FROM gf9dm8_demomusic
WHERE game_type = ?
LIMIT ?
`

type GetDemoMusicParams struct {
	GameType int64
	Limit    int64
}

func (q *Queries) GetDemoMusic(ctx context.Context, arg GetDemoMusicParams) ([]int64, error) {
	rows, err := q.db.QueryContext(ctx, getDemoMusic, arg.GameType, arg.Limit)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []int64
	for rows.Next() {
		var musicid int64
		if err := rows.Scan(&musicid); err != nil {
			return nil, err
		}
		items = append(items, musicid)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
